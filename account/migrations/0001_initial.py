# Generated by Django 5.0.4 on 2024-04-19 23:24

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=9, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name="To'liq ism")),
                ('short_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qisqa ism')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ism')),
                ('second_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Familia')),
                ('third_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Otasining ismi')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name="Tug'ilgan kun")),
                ('image', models.URLField(blank=True, max_length=255, null=True, verbose_name='Rasm')),
                ('imageFile', models.ImageField(blank=True, null=True, upload_to='students/%Y/%m/%d', verbose_name='Rasmi faylda')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan vaqti')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan vaqti")),
                ('now_role', models.CharField(blank=True, max_length=255, null=True, verbose_name='Foydalanuvchining hozirgi vaqtdagi roli')),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('password_save', models.CharField(blank=True, max_length=128, null=True, verbose_name='password save')),
                ('gender', models.CharField(blank=True, choices=[('1', 'Erkak'), ('2', 'Ayol')], default='1', max_length=20, null=True, verbose_name='Jinsi')),
                ('is_student', models.BooleanField(blank=True, default=False, null=True, verbose_name='Talaba')),
                ('is_employee', models.BooleanField(blank=True, default=False, null=True, verbose_name='Hodim')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('passport_serial', models.CharField(blank=True, max_length=20, null=True)),
                ('passport_issue_date', models.DateField(blank=True, null=True)),
                ('passport_jshshir', models.CharField(blank=True, max_length=20, null=True)),
                ('full_id', models.CharField(blank=True, max_length=255, null=True, verbose_name="To'liq ID")),
                ('telegram', models.URLField(blank=True, null=True, verbose_name='Telegram profil havolasi')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram profil havolasi')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook profil havolasi')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
